{
  "version": 3,
  "sources": ["../../../../node_modules/.pnpm/@shoelace-style+shoelace@2.18.0_@types+react@18.3.12/node_modules/@shoelace-style/shoelace/dist/chunks/chunk.2RCF7SLU.js"],
  "sourcesContent": ["import {\n  __spreadProps,\n  __spreadValues\n} from \"./chunk.B3BW2AY6.js\";\n\n// src/internal/form.ts\nvar formCollections = /* @__PURE__ */ new WeakMap();\nvar reportValidityOverloads = /* @__PURE__ */ new WeakMap();\nvar checkValidityOverloads = /* @__PURE__ */ new WeakMap();\nvar userInteractedControls = /* @__PURE__ */ new WeakSet();\nvar interactions = /* @__PURE__ */ new WeakMap();\nvar FormControlController = class {\n  constructor(host, options) {\n    this.handleFormData = (event) => {\n      const disabled = this.options.disabled(this.host);\n      const name = this.options.name(this.host);\n      const value = this.options.value(this.host);\n      const isButton = this.host.tagName.toLowerCase() === \"sl-button\";\n      if (this.host.isConnected && !disabled && !isButton && typeof name === \"string\" && name.length > 0 && typeof value !== \"undefined\") {\n        if (Array.isArray(value)) {\n          value.forEach((val) => {\n            event.formData.append(name, val.toString());\n          });\n        } else {\n          event.formData.append(name, value.toString());\n        }\n      }\n    };\n    this.handleFormSubmit = (event) => {\n      var _a;\n      const disabled = this.options.disabled(this.host);\n      const reportValidity = this.options.reportValidity;\n      if (this.form && !this.form.noValidate) {\n        (_a = formCollections.get(this.form)) == null ? void 0 : _a.forEach((control) => {\n          this.setUserInteracted(control, true);\n        });\n      }\n      if (this.form && !this.form.noValidate && !disabled && !reportValidity(this.host)) {\n        event.preventDefault();\n        event.stopImmediatePropagation();\n      }\n    };\n    this.handleFormReset = () => {\n      this.options.setValue(this.host, this.options.defaultValue(this.host));\n      this.setUserInteracted(this.host, false);\n      interactions.set(this.host, []);\n    };\n    this.handleInteraction = (event) => {\n      const emittedEvents = interactions.get(this.host);\n      if (!emittedEvents.includes(event.type)) {\n        emittedEvents.push(event.type);\n      }\n      if (emittedEvents.length === this.options.assumeInteractionOn.length) {\n        this.setUserInteracted(this.host, true);\n      }\n    };\n    this.checkFormValidity = () => {\n      if (this.form && !this.form.noValidate) {\n        const elements = this.form.querySelectorAll(\"*\");\n        for (const element of elements) {\n          if (typeof element.checkValidity === \"function\") {\n            if (!element.checkValidity()) {\n              return false;\n            }\n          }\n        }\n      }\n      return true;\n    };\n    this.reportFormValidity = () => {\n      if (this.form && !this.form.noValidate) {\n        const elements = this.form.querySelectorAll(\"*\");\n        for (const element of elements) {\n          if (typeof element.reportValidity === \"function\") {\n            if (!element.reportValidity()) {\n              return false;\n            }\n          }\n        }\n      }\n      return true;\n    };\n    (this.host = host).addController(this);\n    this.options = __spreadValues({\n      form: (input) => {\n        const formId = input.form;\n        if (formId) {\n          const root = input.getRootNode();\n          const form = root.querySelector(`#${formId}`);\n          if (form) {\n            return form;\n          }\n        }\n        return input.closest(\"form\");\n      },\n      name: (input) => input.name,\n      value: (input) => input.value,\n      defaultValue: (input) => input.defaultValue,\n      disabled: (input) => {\n        var _a;\n        return (_a = input.disabled) != null ? _a : false;\n      },\n      reportValidity: (input) => typeof input.reportValidity === \"function\" ? input.reportValidity() : true,\n      checkValidity: (input) => typeof input.checkValidity === \"function\" ? input.checkValidity() : true,\n      setValue: (input, value) => input.value = value,\n      assumeInteractionOn: [\"sl-input\"]\n    }, options);\n  }\n  hostConnected() {\n    const form = this.options.form(this.host);\n    if (form) {\n      this.attachForm(form);\n    }\n    interactions.set(this.host, []);\n    this.options.assumeInteractionOn.forEach((event) => {\n      this.host.addEventListener(event, this.handleInteraction);\n    });\n  }\n  hostDisconnected() {\n    this.detachForm();\n    interactions.delete(this.host);\n    this.options.assumeInteractionOn.forEach((event) => {\n      this.host.removeEventListener(event, this.handleInteraction);\n    });\n  }\n  hostUpdated() {\n    const form = this.options.form(this.host);\n    if (!form) {\n      this.detachForm();\n    }\n    if (form && this.form !== form) {\n      this.detachForm();\n      this.attachForm(form);\n    }\n    if (this.host.hasUpdated) {\n      this.setValidity(this.host.validity.valid);\n    }\n  }\n  attachForm(form) {\n    if (form) {\n      this.form = form;\n      if (formCollections.has(this.form)) {\n        formCollections.get(this.form).add(this.host);\n      } else {\n        formCollections.set(this.form, /* @__PURE__ */ new Set([this.host]));\n      }\n      this.form.addEventListener(\"formdata\", this.handleFormData);\n      this.form.addEventListener(\"submit\", this.handleFormSubmit);\n      this.form.addEventListener(\"reset\", this.handleFormReset);\n      if (!reportValidityOverloads.has(this.form)) {\n        reportValidityOverloads.set(this.form, this.form.reportValidity);\n        this.form.reportValidity = () => this.reportFormValidity();\n      }\n      if (!checkValidityOverloads.has(this.form)) {\n        checkValidityOverloads.set(this.form, this.form.checkValidity);\n        this.form.checkValidity = () => this.checkFormValidity();\n      }\n    } else {\n      this.form = void 0;\n    }\n  }\n  detachForm() {\n    if (!this.form)\n      return;\n    const formCollection = formCollections.get(this.form);\n    if (!formCollection) {\n      return;\n    }\n    formCollection.delete(this.host);\n    if (formCollection.size <= 0) {\n      this.form.removeEventListener(\"formdata\", this.handleFormData);\n      this.form.removeEventListener(\"submit\", this.handleFormSubmit);\n      this.form.removeEventListener(\"reset\", this.handleFormReset);\n      if (reportValidityOverloads.has(this.form)) {\n        this.form.reportValidity = reportValidityOverloads.get(this.form);\n        reportValidityOverloads.delete(this.form);\n      }\n      if (checkValidityOverloads.has(this.form)) {\n        this.form.checkValidity = checkValidityOverloads.get(this.form);\n        checkValidityOverloads.delete(this.form);\n      }\n      this.form = void 0;\n    }\n  }\n  setUserInteracted(el, hasInteracted) {\n    if (hasInteracted) {\n      userInteractedControls.add(el);\n    } else {\n      userInteractedControls.delete(el);\n    }\n    el.requestUpdate();\n  }\n  doAction(type, submitter) {\n    if (this.form) {\n      const button = document.createElement(\"button\");\n      button.type = type;\n      button.style.position = \"absolute\";\n      button.style.width = \"0\";\n      button.style.height = \"0\";\n      button.style.clipPath = \"inset(50%)\";\n      button.style.overflow = \"hidden\";\n      button.style.whiteSpace = \"nowrap\";\n      if (submitter) {\n        button.name = submitter.name;\n        button.value = submitter.value;\n        [\"formaction\", \"formenctype\", \"formmethod\", \"formnovalidate\", \"formtarget\"].forEach((attr) => {\n          if (submitter.hasAttribute(attr)) {\n            button.setAttribute(attr, submitter.getAttribute(attr));\n          }\n        });\n      }\n      this.form.append(button);\n      button.click();\n      button.remove();\n    }\n  }\n  /** Returns the associated `<form>` element, if one exists. */\n  getForm() {\n    var _a;\n    return (_a = this.form) != null ? _a : null;\n  }\n  /** Resets the form, restoring all the control to their default value */\n  reset(submitter) {\n    this.doAction(\"reset\", submitter);\n  }\n  /** Submits the form, triggering validation and form data injection. */\n  submit(submitter) {\n    this.doAction(\"submit\", submitter);\n  }\n  /**\n   * Synchronously sets the form control's validity. Call this when you know the future validity but need to update\n   * the host element immediately, i.e. before Lit updates the component in the next update.\n   */\n  setValidity(isValid) {\n    const host = this.host;\n    const hasInteracted = Boolean(userInteractedControls.has(host));\n    const required = Boolean(host.required);\n    host.toggleAttribute(\"data-required\", required);\n    host.toggleAttribute(\"data-optional\", !required);\n    host.toggleAttribute(\"data-invalid\", !isValid);\n    host.toggleAttribute(\"data-valid\", isValid);\n    host.toggleAttribute(\"data-user-invalid\", !isValid && hasInteracted);\n    host.toggleAttribute(\"data-user-valid\", isValid && hasInteracted);\n  }\n  /**\n   * Updates the form control's validity based on the current value of `host.validity.valid`. Call this when anything\n   * that affects constraint validation changes so the component receives the correct validity states.\n   */\n  updateValidity() {\n    const host = this.host;\n    this.setValidity(host.validity.valid);\n  }\n  /**\n   * Dispatches a non-bubbling, cancelable custom event of type `sl-invalid`.\n   * If the `sl-invalid` event will be cancelled then the original `invalid`\n   * event (which may have been passed as argument) will also be cancelled.\n   * If no original `invalid` event has been passed then the `sl-invalid`\n   * event will be cancelled before being dispatched.\n   */\n  emitInvalidEvent(originalInvalidEvent) {\n    const slInvalidEvent = new CustomEvent(\"sl-invalid\", {\n      bubbles: false,\n      composed: false,\n      cancelable: true,\n      detail: {}\n    });\n    if (!originalInvalidEvent) {\n      slInvalidEvent.preventDefault();\n    }\n    if (!this.host.dispatchEvent(slInvalidEvent)) {\n      originalInvalidEvent == null ? void 0 : originalInvalidEvent.preventDefault();\n    }\n  }\n};\nvar validValidityState = Object.freeze({\n  badInput: false,\n  customError: false,\n  patternMismatch: false,\n  rangeOverflow: false,\n  rangeUnderflow: false,\n  stepMismatch: false,\n  tooLong: false,\n  tooShort: false,\n  typeMismatch: false,\n  valid: true,\n  valueMissing: false\n});\nvar valueMissingValidityState = Object.freeze(__spreadProps(__spreadValues({}, validValidityState), {\n  valid: false,\n  valueMissing: true\n}));\nvar customErrorValidityState = Object.freeze(__spreadProps(__spreadValues({}, validValidityState), {\n  valid: false,\n  customError: true\n}));\n\nexport {\n  formCollections,\n  FormControlController,\n  validValidityState,\n  valueMissingValidityState,\n  customErrorValidityState\n};\n"],
  "mappings": "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",
  "names": ["formCollections", "reportValidityOverloads", "checkValidityOverloads", "userInteractedControls", "interactions", "FormControlController", "host", "options", "event", "disabled", "name", "value", "isButton", "val", "_a", "reportValidity", "control", "emittedEvents", "elements", "element", "__spreadValues", "input", "formId", "form", "formCollection", "el", "hasInteracted", "type", "submitter", "button", "attr", "isValid", "required", "originalInvalidEvent", "slInvalidEvent", "validValidityState", "valueMissingValidityState", "__spreadProps", "customErrorValidityState"]
}
