{
  "version": 3,
  "sources": ["../../../../node_modules/.pnpm/@shoelace-style+shoelace@2.18.0_@types+react@18.3.12/node_modules/@shoelace-style/shoelace/dist/chunks/chunk.NYIIDP5N.js"],
  "sourcesContent": ["// src/internal/slot.ts\nvar HasSlotController = class {\n  constructor(host, ...slotNames) {\n    this.slotNames = [];\n    this.handleSlotChange = (event) => {\n      const slot = event.target;\n      if (this.slotNames.includes(\"[default]\") && !slot.name || slot.name && this.slotNames.includes(slot.name)) {\n        this.host.requestUpdate();\n      }\n    };\n    (this.host = host).addController(this);\n    this.slotNames = slotNames;\n  }\n  hasDefaultSlot() {\n    return [...this.host.childNodes].some((node) => {\n      if (node.nodeType === node.TEXT_NODE && node.textContent.trim() !== \"\") {\n        return true;\n      }\n      if (node.nodeType === node.ELEMENT_NODE) {\n        const el = node;\n        const tagName = el.tagName.toLowerCase();\n        if (tagName === \"sl-visually-hidden\") {\n          return false;\n        }\n        if (!el.hasAttribute(\"slot\")) {\n          return true;\n        }\n      }\n      return false;\n    });\n  }\n  hasNamedSlot(name) {\n    return this.host.querySelector(`:scope > [slot=\"${name}\"]`) !== null;\n  }\n  test(slotName) {\n    return slotName === \"[default]\" ? this.hasDefaultSlot() : this.hasNamedSlot(slotName);\n  }\n  hostConnected() {\n    this.host.shadowRoot.addEventListener(\"slotchange\", this.handleSlotChange);\n  }\n  hostDisconnected() {\n    this.host.shadowRoot.removeEventListener(\"slotchange\", this.handleSlotChange);\n  }\n};\nfunction getTextContent(slot) {\n  if (!slot) {\n    return \"\";\n  }\n  const nodes = slot.assignedNodes({ flatten: true });\n  let text = \"\";\n  [...nodes].forEach((node) => {\n    if (node.nodeType === Node.TEXT_NODE) {\n      text += node.textContent;\n    }\n  });\n  return text;\n}\n\nexport {\n  HasSlotController,\n  getTextContent\n};\n"],
  "mappings": "AACA,IAAIA,EAAoB,KAAM,CAC5B,YAAYC,KAASC,EAAW,CAC9B,KAAK,UAAY,CAAC,EAClB,KAAK,iBAAoBC,GAAU,CACjC,IAAMC,EAAOD,EAAM,QACf,KAAK,UAAU,SAAS,WAAW,GAAK,CAACC,EAAK,MAAQA,EAAK,MAAQ,KAAK,UAAU,SAASA,EAAK,IAAI,IACtG,KAAK,KAAK,cAAc,CAE5B,GACC,KAAK,KAAOH,GAAM,cAAc,IAAI,EACrC,KAAK,UAAYC,CACnB,CACA,gBAAiB,CACf,MAAO,CAAC,GAAG,KAAK,KAAK,UAAU,EAAE,KAAMG,GAAS,CAC9C,GAAIA,EAAK,WAAaA,EAAK,WAAaA,EAAK,YAAY,KAAK,IAAM,GAClE,MAAO,GAET,GAAIA,EAAK,WAAaA,EAAK,aAAc,CACvC,IAAMC,EAAKD,EAEX,GADgBC,EAAG,QAAQ,YAAY,IACvB,qBACd,MAAO,GAET,GAAI,CAACA,EAAG,aAAa,MAAM,EACzB,MAAO,EAEX,CACA,MAAO,EACT,CAAC,CACH,CACA,aAAaC,EAAM,CACjB,OAAO,KAAK,KAAK,cAAc,mBAAmBA,CAAI,IAAI,IAAM,IAClE,CACA,KAAKC,EAAU,CACb,OAAOA,IAAa,YAAc,KAAK,eAAe,EAAI,KAAK,aAAaA,CAAQ,CACtF,CACA,eAAgB,CACd,KAAK,KAAK,WAAW,iBAAiB,aAAc,KAAK,gBAAgB,CAC3E,CACA,kBAAmB,CACjB,KAAK,KAAK,WAAW,oBAAoB,aAAc,KAAK,gBAAgB,CAC9E,CACF,EACA,SAASC,EAAeL,EAAM,CAC5B,GAAI,CAACA,EACH,MAAO,GAET,IAAMM,EAAQN,EAAK,cAAc,CAAE,QAAS,EAAK,CAAC,EAC9CO,EAAO,GACX,OAAC,GAAGD,CAAK,EAAE,QAASL,GAAS,CACvBA,EAAK,WAAa,KAAK,YACzBM,GAAQN,EAAK,YAEjB,CAAC,EACMM,CACT",
  "names": ["HasSlotController", "host", "slotNames", "event", "slot", "node", "el", "name", "slotName", "getTextContent", "nodes", "text"]
}
