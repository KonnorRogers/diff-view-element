{
  "version": 3,
  "sources": ["../../../../node_modules/.pnpm/light-pen@4.2.0/node_modules/light-pen/internal/clamp.js", "../../../../node_modules/.pnpm/light-pen@4.2.0/node_modules/light-pen/internal/drag.js", "../../../../node_modules/.pnpm/light-pen@4.2.0/node_modules/light-pen/internal/resize-icon.js", "../../../../node_modules/.pnpm/light-pen@4.2.0/node_modules/light-pen/exports/components/light-disclosure/light-disclosure.js"],
  "sourcesContent": ["/**\n * @param {number} min\n * @param {number} curr\n * @param {number} max\n */\nexport function clamp(min, curr, max) {\n  if (curr < min) return min;\n  if (curr > max) return max;\n\n  return curr;\n}\n", "/**\n * @typedef {object} DragOptions\n * @property {(x: number, y: number) => void} onMove - Callback that runs as dragging occurs.\n * @property {() => void} onStop - Callback that runs when dragging stops.\n * @property {PointerEvent} initialEvent - When an initial event is passed, the first drag will be triggered immediately using the coordinates therein. This is useful when the drag is initiated by a mousedown/touchstart event but you want the initial \"click\" to activate a drag (e.g. resizePositioning a handle initially at the click target).\n */\n\n/**\n * @param {HTMLElement} container\n * @param {Partial<DragOptions>} [options]\n\n */\nexport function drag(container, options) {\n  /**\n   * @param {PointerEvent} pointerEvent\n   */\n  function move(pointerEvent) {\n    const dims = container.getBoundingClientRect();\n    const defaultView = container.ownerDocument.defaultView;\n    const offsetX = dims.left + (defaultView?.pageXOffset || 0);\n    const offsetY = dims.top + (defaultView?.pageYOffset || 0);\n    const x = pointerEvent.pageX - offsetX;\n    const y = pointerEvent.pageY - offsetY;\n\n    if (options?.onMove) {\n      options.onMove(x, y);\n    }\n  }\n\n  function stop() {\n    document.removeEventListener(\"pointermove\", move);\n    document.removeEventListener(\"pointerup\", stop);\n\n    if (options?.onStop) {\n      options.onStop();\n    }\n  }\n\n  document.addEventListener(\"pointermove\", move, { passive: true });\n  document.addEventListener(\"pointerup\", stop);\n\n  // If an initial event is set, trigger the first drag immediately\n  if (options?.initialEvent instanceof PointerEvent) {\n    move(options.initialEvent);\n  }\n}\n", "import { html } from \"lit\";\n\nexport const resizeIcon = html`<svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  width=\"16\"\n  height=\"16\"\n  fill=\"currentColor\"\n  class=\"bi bi-grip-vertical\"\n  viewBox=\"0 0 16 16\"\n  part=\"svg\"\n>\n  <path\n    d=\"M7 2a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zM7 5a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zM7 8a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm-3 3a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm-3 3a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0z\"\n  ></path>\n</svg>`;\n", "import { html, css } from \"lit\";\nimport { baseStyles } from \"../../styles/base-styles.js\";\nimport { BaseElement } from \"../../../internal/base-element.js\";\n\nfunction motionReduced() {\n  return (\n    /** @type {any} */ (\n      window.matchMedia(`(prefers-reduced-motion: reduce)`)\n    ) === true ||\n    window.matchMedia(`(prefers-reduced-motion: reduce)`).matches === true\n  );\n}\n\n/**\n * A `<details>` element packaged nicely to animate like a disclosure.\n *\n * @customElement\n * @tagname light-disclosure\n *\n * @slot default - The code to use for highlighting\n */\nexport default class LightDisclosure extends BaseElement {\n  /**\n   * @override\n   */\n  static baseName = \"light-disclosure\";\n\n  /**\n   * @override\n   */\n  static styles = [\n    baseStyles,\n    css`\n      [part~=\"content-base\"] {\n        display: grid;\n        grid-template-rows: 0fr;\n        transition: grid-template-rows 300ms ease-in-out;\n      }\n\n      [part~=\"content\"] {\n        overflow: hidden;\n      }\n\n      details[open][expanded] [part~=\"content-base\"] {\n        grid-template-rows: 1fr;\n      }\n\n      summary {\n        padding: 0.4em 0.6em;\n        cursor: pointer;\n      }\n\n      summary:hover {\n        background-color: rgba(0, 0, 0, 0.05);\n      }\n\n      @media (prefers-reduced-motion: reduce) {\n        [part~=\"content-base\"] {\n          transition: none;\n        }\n        details[open] [part~=\"content-base\"] {\n          grid-template-rows: 1fr;\n        }\n      }\n    `,\n  ];\n\n  /**\n   * @override\n   */\n  static properties = {\n    summary: {},\n    open: { type: Boolean },\n  };\n\n  constructor() {\n    super();\n    /**\n     * @type {string}\n     */\n    this.summary = \"\";\n\n    /**\n     * @type {boolean}\n     */\n    this.open = false;\n\n    /**\n     * @internal\n     * This is used because Safari has strange timing on the \"toggle\" event. If we don't use this,\n     *   our initial opening of the disclosure gets clipped and is like a normal `<details>`\n     */\n    this._openOnToggle = true;\n  }\n\n  // TODO: Add a mutationObserver for when it connects\n\n  /**\n   * @override\n   * @param {import(\"lit\").PropertyValues<this>} changedProperties\n   */\n  willUpdate(changedProperties) {\n    const details = this.details;\n\n    if (details && changedProperties.has(\"open\")) {\n      if (!this.open) {\n        if (details.hasAttribute(\"expanded\")) {\n          details.removeAttribute(\"expanded\");\n        } else {\n          details.open = this.open;\n        }\n\n        // \"transitionend\" will fire and set \"open\" on the details element accordingly.\n        // If motion is reduced, our transition will never fire. so we need to set \"open\" on the <details> here.\n        if (motionReduced()) {\n          details.open = this.open;\n        }\n\n        this.dispatchEvent(new Event(\"light-toggle\"));\n      } else {\n        details.open = this.open;\n\n        this._openOnToggle = false;\n\n        // If you only wait 1 animation frame, we get clipped by `display: none;`\n        requestAnimationFrame(() => {\n          requestAnimationFrame(() => {\n            details.setAttribute(\"expanded\", \"\");\n            this._openOnToggle = true;\n            this.dispatchEvent(new Event(\"light-toggle\"));\n          });\n        });\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  click() {\n    this.open = !this.open;\n  }\n\n  /**\n   * @override\n   * @param {FocusOptions} [options]\n   */\n  focus(options) {\n    this.shadowRoot?.querySelector(\"summary\")?.focus(options);\n  }\n\n  /**\n   * @override\n   */\n  render() {\n    return html`\n      <details\n        part=\"details\"\n        @transitionend=${this.handleTransitionEnd}\n        @toggle=${this.handleToggle}\n      >\n        <summary part=\"summary\" @click=${this.handleSummaryClick}>\n          <slot name=\"summary\">${this.summary}</slot>\n        </summary>\n\n        <div part=\"content-base\">\n          <div part=\"content\">\n            <slot></slot>\n          </div>\n        </div>\n      </details>\n    `;\n  }\n\n  get details() {\n    return this.shadowRoot?.querySelector(\"details\");\n  }\n\n  /**\n   * @param {TransitionEvent} e\n   */\n  handleTransitionEnd(e) {\n    const details = this.details;\n\n    if (!details) return;\n    if (!(e.propertyName === \"grid-template-rows\")) return;\n\n    if (details.open === true) {\n      if (!details.hasAttribute(\"expanded\")) {\n        details.open = false;\n      }\n    } else {\n      details.open = true;\n    }\n  }\n\n  /**\n   * Toggle fires after the attribute is set / unset, so its useless for expanded. But useful for when users search a page with \"ctrl+f\"\n   * @param {Event} _e\n   */\n  handleToggle(_e) {\n    const details = this.details;\n\n    if (!details) return;\n\n    if (\n      details.open &&\n      !details.hasAttribute(\"expanded\") &&\n      this._openOnToggle\n    ) {\n      this.open = details.open;\n      this.dispatchEvent(new Event(\"light-toggle\"));\n      details.setAttribute(\"expanded\", \"\");\n    }\n  }\n\n  /**\n   * @param {Event} e\n   */\n  handleSummaryClick(e) {\n    const details = this.details;\n    if (!details) return;\n\n    e.preventDefault();\n\n    if (details.open) {\n      this.open = false;\n      return false;\n    }\n\n    this.open = true;\n  }\n}\n"],
  "mappings": "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",
  "names": ["clamp", "min", "curr", "max", "drag", "container", "options", "move", "pointerEvent", "dims", "defaultView", "offsetX", "offsetY", "x", "y", "stop", "resizeIcon", "x", "motionReduced", "LightDisclosure", "BaseElement", "changedProperties", "details", "options", "x", "e", "_e", "__publicField", "baseStyles", "i"]
}
